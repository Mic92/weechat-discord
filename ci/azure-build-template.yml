jobs:
  - job: ${{ parameters.name }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    steps:
      - ${{ if eq(parameters.name, 'Linux') }}:
          - script: |
              curl https://sh.rustup.rs -sSf | sh -s -- -y
              echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
              rustup update stable
            displayName: Install rust
      - ${{ if eq(parameters.name, 'macOS') }}:
          - script: |
              curl https://sh.rustup.rs -sSf | sh -s -- -y
              echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
              $HOME/.cargo/bin/rustup update stable
            displayName: Install rust

      - ${{ if eq(parameters.name, 'Linux') }}:
          - script: |
              sudo apt-get install gnupg-curl
              sudo apt-key adv --keyserver hkps://keys.openpgp.org --recv-keys 11E9DE8848F2B65222AA75B8D1820DB22A11534E
              sudo add-apt-repository "deb https://weechat.org/ubuntu $(lsb_release -cs) main"
              sudo apt-get update
              sudo apt install weechat-devel-curses
            displayName: Install weechat
      - ${{ if eq(parameters.name, 'macOS') }}:
          - script: brew install weechat
            displayName: Install weechat

      - script: |
          rustc -Vv
          cargo -V
          echo "##vso[task.setvariable variable=rustcVersion]$(rustc -V)"
        displayName: Query rust and cargo versions

      - task: Cache@2
        inputs:
          key: '"rustc" | "$(Agent.OS)" | "$(rustcVersion)" | Cargo.lock'
          path: ./target
        displayName: Cache target directory

      - script: cargo build --release
        displayName: Build

      - script: |
          find ./target/debug -type f -maxdepth 1 -delete
          rm -fr ./target/debug/{deps,.fingerprint}/{*weechat*,*main*,*test*}
          rm -f  ./target/.rustc_info.json
        displayName: Clean up ./target


      - script: cp target/release/libweecord.* $(Build.ArtifactStagingDirectory)/
        displayName: Copy artifacts

      - ${{ if eq(parameters.name, 'Linux') }}:
          # Linux.
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'weechat-discord-linux'
            displayName: Publish build artifacts
      - ${{ if eq(parameters.name, 'macOS') }}:
          # macOS.
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'weechat-discord-macos'
            displayName: Publish build artifacts
